<?php

namespace WorkOfStan\Backyard\Test;

use PHPUnit\Framework\TestCase;
use WorkOfStan\Backyard\BackyardTime;
use WorkOfStan\Backyard\BackyardError;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-06-25 at 17:57:37.
 */
class BackyardTimeTest extends TestCase
{
    /**
     * @var BackyardTime
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp(): void
    {
        error_reporting(E_ALL); // incl E_NOTICE
        $this->object = new BackyardTime();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     */
    protected function tearDown(): void
    {
        // no action
    }

    /**
     * @covers WorkOfStan\Backyard\BackyardTime::getmicrotime
     *
     * @return void
     */
    public function testGetmicrotime(): void
    {
        $this->assertTrue(is_float($this->object->getmicrotime()));
    }

    /**
     * @covers WorkOfStan\Backyard\BackyardTime::getRunningTime
     *
     * @return void
     */
    public function testGetRunningTime(): void
    {
        $expected = '0.0';

        //$this->assertEquals($expected, substr((string) $this->object->getRunningTime(), 0, 3));
        $this->assertEquals((float) $expected, (float) substr((string) $this->object->getRunningTime(), 0, 3));
    }

    /**
     * @covers WorkOfStan\Backyard\BackyardTime::pageGeneratedIn
     *
     * @return void
     */
    public function testPageGeneratedInDefault(): void
    {
        $expected = '0.0';

        //$this->assertEquals($expected, substr($this->object->pageGeneratedIn(), 0, 3));
        $this->assertEquals((float) $expected, (float) substr((string) $this->object->pageGeneratedIn(), 0, 3));
    }

    /**
     * @return void
     */
    public function testPageGeneratedInLangString(): void
    {
        $langStringPageGeneratedIn = "Page Generated in %s";
        $expected = 'Page Generated in 0';

        $this->assertEquals(
            $expected,
            substr($this->object->pageGeneratedIn($langStringPageGeneratedIn), 0, strlen($expected))
        );
    }
}
